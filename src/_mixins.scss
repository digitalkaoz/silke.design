$headline-color: #bbb;
$drop-color: #57809a;

@import "materialize-css/sass/components/color-variables";
@import "materialize-css/sass/components/variables";

@mixin reset-offset {
  margin-left: auto;
  left: auto;
  right: auto;
}
@mixin grid-classes($size, $i, $perc) {
  &%offset-#{$size}#{$i} {
    margin-left: $perc;
  }
  &%pull-#{$size}#{$i} {
    right: $perc;
  }
  &%push-#{$size}#{$i} {
    left: $perc;
  }
}

%page-footer {
  padding-top: 20px;
  color: $footer-font-color;
  background-color: $footer-bg-color;
}

%row {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;

  // Clear floating children
  &:after {
    content: "";
    display: table;
    clear: both;
  }

  %col {
    float: left;
    box-sizing: border-box;
    padding: 0 $gutter-width / 2;
    min-height: 1px;

    &[class*="push-"],
    &[class*="pull-"] {
      position: relative;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      &%s#{$i} {
        width: $perc;
        @include reset-offset;
      }
      $i: $i + 1;
    }

    $i: 1;
    @while $i <= $num-cols {
      $perc: unquote((100 / ($num-cols / $i)) + "%");
      @include grid-classes("s", $i, $perc);
      $i: $i + 1;
    }

    @media #{$medium-and-up} {
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &%m#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("m", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$large-and-up} {
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &%l#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("l", $i, $perc);
        $i: $i + 1;
      }
    }

    @media #{$extra-large-and-up} {
      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        &%xl#{$i} {
          width: $perc;
          @include reset-offset;
        }
        $i: $i + 1;
      }

      $i: 1;
      @while $i <= $num-cols {
        $perc: unquote((100 / ($num-cols / $i)) + "%");
        @include grid-classes("xl", $i, $perc);
        $i: $i + 1;
      }
    }
  }
}

%hide-on-small-only,
%hide-on-small-and-down {
  @media #{$small-and-down} {
    display: none !important;
  }
}
%hide-on-med-and-down {
  @media #{$medium-and-down} {
    display: none !important;
  }
}
%hide-on-med-and-up {
  @media #{$medium-and-up} {
    display: none !important;
  }
}
%hide-on-med-only {
  @media only screen and (min-width: $small-screen) and (max-width: $medium-screen) {
    display: none !important;
  }
}
%hide-on-large-only {
  @media #{$large-and-up} {
    display: none !important;
  }
}
%hide-on-extra-large-only {
  @media #{$extra-large-and-up} {
    display: none !important;
  }
}
%show-on-extra-large {
  @media #{$extra-large-and-up} {
    display: block !important;
  }
}
%show-on-large {
  @media #{$large-and-up} {
    display: block !important;
  }
}
%show-on-medium {
  @media only screen and (min-width: $small-screen) and (max-width: $medium-screen) {
    display: block !important;
  }
}
%show-on-small {
  @media #{$small-and-down} {
    display: block !important;
  }
}
%show-on-medium-and-up {
  @media #{$medium-and-up} {
    display: block !important;
  }
}
%show-on-medium-and-down {
  @media #{$medium-and-down} {
    display: block !important;
  }
}

%valign-wrapper {
  display: flex;
  align-items: center;
}
